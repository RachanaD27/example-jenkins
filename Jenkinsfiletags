pipeline { 
	agent any 	
	stages {
	   
	    stage('Checkout SCM') {
            steps {
                checkout([$class: 'GitSCM',
                       // branches: [[name: '*/main']],
                        branches: [[name: "${params.Tags}"]],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[$class: 'CleanCheckout']],
                        submoduleCfg: [],
                        userRemoteConfigs: [[url: 'https://github.com/RachanaD27/example-jenkins.git']]
                ])
            }
        }
        
        stage('Tag') {
            steps {
                script {
                    env.POM_VERSION = readMavenPom().getVersion()
}

// creating the name of the tag
    void gitTag(Version releaseVersion) {
      sshagent(['devops_deploy_DEV']) {
        shell 'git tag -d \$(git tag)'
        shell 'git fetch --tags'
        echo "New release version ${releaseVersion.normalVersion}"
        shell "git tag -fa ${releaseVersion.normalVersion} -m 'Release version ${releaseVersion.normalVersion}'"
      }
    }


        
		/* dev deployment starts here*/
		
/*stage('Build and Deploy to Anypoint platform DEV environment'){

			 steps {
						script{
                            
                            def deployenv ="dev"

                            def version = "${env.dev_DEPLOY_MULE_VERSION}"
                    		def deployusername="${env.dev_DEPLOY_USERNAME}" 
							def deploypassword="${env.dev_DEPLOY_PASSWORD}" 
							def deployvCore="${env.dev_DEPLOY_VCORE}"
							def deployworkers="${env.dev_DEPLOY_WORKERS}" 
					
                            bat """mvn clean deploy -DmuleDeploy -DskipTests -Dmule.version=${version} -Danypoint.username=${deployusername} -Danypoint.password=${deploypassword} -Denv=${deployenv} -DvCore=${deployvCore} -Dworkers=${deployworkers} -Dproperties=${deployenv}"""
                    
}
}
}*/
	
}
}

